"""
6.  Реализовать два небольших скрипта:
        а) итератор, генерирующий целые числа, начиная с указанного,
        б) итератор, повторяющий элементы некоторого списка, определенного заранее.
    Подсказка: использовать функцию count() и cycle() модуля itertools.
    Обратите внимание, что создаваемый цикл не должен быть бесконечным.
    Необходимо предусмотреть условие его завершения.
    Например, в первом задании выводим целые числа, начиная с 3, а при достижении числа 10 завершаем цикл.
    Во втором также необходимо предусмотреть условие, при котором повторение элементов списка будет прекращено.
"""
import itertools


def run_count(count_start, count_stop):
    for i in itertools.count(count_start):
        print(i)
        if i == count_stop:
            break
    return 'Наконец закончилось!'


def run_cycle(cycle_list, cycle_stop, nu=0):
    for list_el in itertools.cycle(cycle_list):
        print(list_el)
        nu += 1
        if nu == cycle_stop:
            break

    return 'Наконец закончилось!'


print(run_count(int(input('Введите число, с которого хотите начать пробег: ')),
                int(input('Введите число, на котором хотите закончить: '))))

print(run_cycle(list(map(int, (input('Введите список через пробел: ').split()))),
                int(input('Введите кол-во элементов, которые вы хотите вывести : '))))
